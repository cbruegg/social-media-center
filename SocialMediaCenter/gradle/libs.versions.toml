[versions]
agp = "8.3.0"
android-compileSdk = "34"
android-minSdk = "26"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.5.1"
androidx-material = "1.12.0"
androidx-test-junit = "1.1.5"
bigbone = "2.0.0-SNAPSHOT"
compose = "1.6.10"
compose-plugin = "1.6.10"
emojiCompose = "1.5.0"
junit = "4.13.2"
kotlin = "2.0.0"
ktor-client = "3.0.0-wasm2"
ktor-server = "2.3.11"
coroutines = "1.8.1"
kotlinx-serialization-json = "1.6.3"
kotlinx-datetime = "0.6.0"
coil = "3.0.0-alpha06"
ksoup = "0.4.0"
lifecycle = "2.8.0"
logbackClassic = "1.5.6"

[libraries]
bigbone = { module = "social.bigbone:bigbone", version.ref = "bigbone" }
emoji-compose = { module = "org.kodein.emoji:emoji-compose", version.ref = "emojiCompose" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-lifecycle-runtime = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime", version.ref = "lifecycle" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }
ksoup-html = { module = "com.mohamedrejeb.ksoup:ksoup-html", version.ref = "ksoup" }
ksoup-entities = { module = "com.mohamedrejeb.ksoup:ksoup-entities", version.ref = "ksoup" }
lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-savedstate = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }

serverside-ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-server" }
serverside-ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor-server" }
serverside-ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-server" }
serverside-ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor-server" }
serverside-ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor-server" }
serverside-ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-server" }
serverside-ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-server" }
serverside-ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-server" }
serverside-ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor-server" }
serverside-ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor-server" }
serverside-ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor-server" }
serverside-ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-server" }
serverside-ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-server" }

clientside-ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-client" }
clientside-ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-client" }
clientside-ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor-client" }
clientside-ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor-client" }
clientside-ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor-client" }
clientside-ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-client" }
clientside-ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-client" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ktorServer = { id = "io.ktor.plugin", version.ref = "ktor-server" }